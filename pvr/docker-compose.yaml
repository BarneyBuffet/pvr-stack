## https://www.youtube.com/watch?v=5rtGBwBuzQE
version: '3'

services:
  ## https://haugene.github.io/docker-transmission-openvpn/
  transmission-openvpn:
    ## https://github.com/haugene/docker-transmission-openvpn/releases
    image: haugene/transmission-openvpn:${TRANSMISSION_VERSION:-4.0}
    container_name: pvr_transmission
    volumes:
      - ${DOWNLOADS_PATH}:/data/downloads
      - ${PVR_PATH}/transmission:/data/transmission-home
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - CREATE_TUN_DEVICE=true
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 --dhcp-option DNS 9.9.9.9
      - WEBPROXY_ENABLED=false
      - LOCAL_NETWORK=${TRANSMISSION_LOCAL_NETWORK}
      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
      - TRANSMISSION_HOME=/data/transmission-home
      - TRANSMISSION_DOWNLOAD_DIR=/data/downloads
      - TRANSMISSION_INCOMPLETE_DIR=/data/downloads/#incomplete
      - TRANSMISSION_WATCH_DIR=/data/downloads/#watch
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_RPC_USERNAME}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=4
      - TRANSMISSION_WEB_UI=transmission-web-control
      - TRANSMISSION_ALT_SPEED_DOWN=1000
      - TRANSMISSION_ALT_SPEED_ENABLED=true
      - TRANSMISSION_ALT_SPEED_TIME_BEGIN=300
      - TRANSMISSION_ALT_SPEED_TIME_DAY=127
      - TRANSMISSION_ALT_SPEED_TIME_ENABLED=true
      - TRANSMISSION_ALT_SPEED_TIME_END=1380
      - TRANSMISSION_ALT_SPEED_UP=2
      - TRANSMISSION_PEER_PORT=47444
      - DNS=9.9.9.9,149.112.112.112
    cap_add:
      - NET_ADMIN
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - 9091:9091 ## Transmission WebGUI
      - 8265:8265 ## Tdarr WebGUI
      - 9696:9696 ## Prowlarr WebGUI
      - 7878:7878 ## Radarr WebGUI
      - 8989:8989 ## Sonarr WebGUI
      - 8686:8686 ## Lidarr WebGUI
      - 8787:8787 ## Readarr WebGUI
      - 8081:8081 ## Calibre WebGUI
      - 8082:8080 ## Calibre Desktop GUI
    restart: unless-stopped

  tdarr:
    ## https://github.com/users/haveagitgat/packages/container/package/tdarr 
    image: ghcr.io/haveagitgat/tdarr:${TDARR_VERSION:-2.00.18}
    container_name: pvr_tdarr
    network_mode: "service:transmission-openvpn"
    # ports: ## Not needed because we are going through service:transmission-openvpn 
      # - 8265:8265 # webUI port
      # - 8266:8266 # server port
      # - 8267:8267 # Internal node port
      # - 8268:8268 # Example extra node port
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=${UMASK}
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      ## Not using distributed notes, so not needed
      # - nodeID=MyInternalNode
      # - nodeIP=0.0.0.0
      # - nodePort=8267
    volumes:
      - ${PVR_PATH}/tdarr/server:/app/server
      - ${PVR_PATH}/tdarr/configs:/app/configs
      - ${PVR_PATH}/tdarr/logs:/app/logs
      - ${PVR_PATH}/tdarr/media:/media
      - ${PVR_PATH}/tdarr/transcode_cache:/temp
      - ${MOVIES_PATH}:/home/Tdarr/Media/Movies
      - ${TV_PATH}:/home/Tdarr/Media/TVShows
      - ${BJJ_PATH}:/home/Tdarr/Media/BJJ
    restart: unless-stopped

  prowlarr:
    ## https://github.com/linuxserver/docker-prowlarr/releases
    image: lscr.io/linuxserver/prowlarr:${PROWLARR_VERSION:-develop}
    network_mode: "service:transmission-openvpn"
    container_name: pvr_prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${PVR_PATH}/prowlarr:/config
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:9696 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
 
  radarr:
    ## https://github.com/linuxserver/docker-radarr/releases
    image: lscr.io/linuxserver/radarr:${RADARR_VERSION:-4.1.0.6175-ls139}
    network_mode: "service:transmission-openvpn"
    container_name: pvr_radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${PVR_PATH}/radarr:/config
      - ${MOVIES_PATH}:/movies
      - ${DOWNLOADS_PATH}:/downloads
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:7878 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
 
  sonarr:
    ## https://github.com/linuxserver/docker-sonarr/releases 
    image: lscr.io/linuxserver/sonarr:${SONARR_VERSION:-3.0.8.1507-ls147}
    network_mode: "service:transmission-openvpn"
    container_name: pvr_sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${PVR_PATH}/sonarr:/config
      - ${TV_PATH}:/tv
      - ${DOWNLOADS_PATH}:/downloads
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8989 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
 
  lidarr:
    ## https://github.com/linuxserver/docker-lidarr/releases
    image: lscr.io/linuxserver/lidarr:${LIDARR_VERSION:-0.8.1.2135-ls84}
    network_mode: "service:transmission-openvpn"
    container_name: pvr_lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${PVR_PATH}/lidarr:/config
      - ${MUSIC_PATH}:/music
      - ${DOWNLOADS_PATH}:/downloads
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8686 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
 
  readarr:
    ## https://github.com/linuxserver/docker-readarr/releases
    image: lscr.io/linuxserver/readarr:${READARR_VERSION:-develop}
    network_mode: "service:transmission-openvpn"
    container_name: pvr_readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=${UMASK}
    volumes:
      - ${PVR_PATH}/readarr:/config
      - ${BOOKS_PATH}:/books
      - ${DOWNLOADS_PATH}:/downloads
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8787|| exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  # calibre:
  #   ## https://github.com/linuxserver/docker-calibre/releases
  #   image: lscr.io/linuxserver/calibre:${CALIBRE_VERSION:-v5.40.0-ls157}
  #   network_mode: "service:transmission-openvpn"
  #   container_name: pvr_calibre
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK=${UMASK}
  #     # - PASSWORD=${CALIBRE_PASSWORD}
  #     # - CLI_ARGS= #optional
  #   volumes:
  #     - ${PVR_PATH}/calibre:/config
  #     - ${BOOKS_PATH}:/books
  #     - ${DOWNLOADS_PATH}:/downloads
  #   restart: unless-stopped

#  lazylibrarian:
#     image: linuxserver/lazylibrarian
#     network_mode: "service:transmission-openvpn"
#     container_name: lazylibrarian
#     environment:
#         - PUID=1000
#         - PGID=100
#          - TZ=America/New_York
#         #- DOCKER_MODS=linuxserver/calibre-web:calibre #optional
#     volumes:
#         - /srv/dev-disk-by-label-data/appdata/lazylibrarian:/config
#         - /srv/dev-disk-by-label-data/media/:/media
#     restart: unless-stopped

  # calibre:
  #     image: linuxserver/calibre
  #     network_mode: "service:transmission-openvpn"
  #     container_name: calibre
  #     env_file:
  #         - stack.env
  #     volumes:
  #         - /media/${USER}/Data/appdata/calibre:/config
  #         - /media/${USER}/Data/media/books:/books
  #         - /media/${USER}/Data/media/books_not_in_library:/books_add_me
  #     restart: unless-stopped
      
  # calibre-web:
  #     image: linuxserver/calibre-web
  #     network_mode: "service:transmission-openvpn"
  #     container_name: calibre-web
  #     env_file:
  #         - stack.env
  #     volumes:
  #       - /media/${USER}/Data/appdata/calibre-web:/config
  #       - /media/${USER}/Data/media/books:/books
  #     restart: unless-stopped    

  # plex:
  #     image: linuxserver/plex
  #     network_mode: "service:transmission-openvpn"
  #     container_name: plex
  #     volumes:
  #         - /media/${USER}/Data/appdata/plex:/config
  #         - /media/${USER}/Data/media/tv:/tv
  #         - /media/${USER}/Data/media/movies:/movies
  #         - /media/${USER}/Data/media/music:/music
  #     env_file:
  #         - stack.env
  #     restart: unless-stopped    

  # soulseek:
  #     image: realies/soulseek
  #     network_mode: "service:transmission-openvpn"
  #     container_name: soulseek
  #     volumes:
  #       - /media/${USER}/Data/appdata/soulseek:/data/.SoulseekQt
  #       - /media/${USER}/Data/downloads/soulseekqt:/data/Soulseek Downloads
  #       - /home/${USER}/.local/log/soulseek:/data/Soulseek Chat Logs
  #       - /media/${USER}/Data/media/music/:/data/public/music
  #     env_file:
  #       - stack.env
  #     restart: unless-stopped